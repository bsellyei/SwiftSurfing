//
// HomeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class HomeAPI {
    /**
     Find all home items for couch
     
     - parameter couchId: (path) ID of couch whose items to return 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func findAllHomeItemsForUser(couchId: String, completion: @escaping ((_ data: [HomeConfiguration]?,_ error: Error?) -> Void)) {
        findAllHomeItemsForUserWithRequestBuilder(couchId: couchId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Find all home items for couch
     - GET /home/items/{couchId}
     - 
     - examples: [{contentType=application/json, example={}}]
     
     - parameter couchId: (path) ID of couch whose items to return 

     - returns: RequestBuilder<[HomeConfiguration]> 
     */
    open class func findAllHomeItemsForUserWithRequestBuilder(couchId: String) -> RequestBuilder<[HomeConfiguration]> {
        var path = "/home/items/{couchId}"
        let couchIdPreEscape = "\(couchId)"
        let couchIdPostEscape = couchIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{couchId}", with: couchIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[HomeConfiguration]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Switch items state
     
     - parameter itemId: (path) ID of item to switch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func switchItem(itemId: String, completion: @escaping ((_ data: HomeConfiguration?,_ error: Error?) -> Void)) {
        switchItemWithRequestBuilder(itemId: itemId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Switch items state
     - POST /home/switch/{itemId}
     - 
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter itemId: (path) ID of item to switch 

     - returns: RequestBuilder<HomeConfiguration> 
     */
    open class func switchItemWithRequestBuilder(itemId: String) -> RequestBuilder<HomeConfiguration> {
        var path = "/home/switch/{itemId}"
        let itemIdPreEscape = "\(itemId)"
        let itemIdPostEscape = itemIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{itemId}", with: itemIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<HomeConfiguration>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
