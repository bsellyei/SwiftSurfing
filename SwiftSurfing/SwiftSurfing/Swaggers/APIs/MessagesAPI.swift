//
// MessagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class MessagesAPI {
    /**
     Add a new message
     
     - parameter body: (body) Message object that needs to be added 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addMessage(body: APIMessage, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        addMessageWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     Add a new message
     - POST /messages
     - 
     
     - parameter body: (body) Message object that needs to be added 

     - returns: RequestBuilder<Void> 
     */
    open class func addMessageWithRequestBuilder(body: APIMessage) -> RequestBuilder<Void> {
        let path = "/messages"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     Find all messages in conversation
     
     - parameter conversationId: (path) ID of conversation whose messages to return 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getAllMessagesInConversation(conversationId: String, completion: @escaping ((_ data: [APIMessage]?,_ error: Error?) -> Void)) {
        getAllMessagesInConversationWithRequestBuilder(conversationId: conversationId).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Find all messages in conversation
     - GET /messages/{conversationId}
     - 
     - examples: [{contentType=application/json, example={}}]
     
     - parameter conversationId: (path) ID of conversation whose messages to return 

     - returns: RequestBuilder<[APIMessage]> 
     */
    open class func getAllMessagesInConversationWithRequestBuilder(conversationId: String) -> RequestBuilder<[APIMessage]> {
        var path = "/messages/{conversationId}"
        let conversationIdPreEscape = "\(conversationId)"
        let conversationIdPostEscape = conversationIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{conversationId}", with: conversationIdPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<[APIMessage]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
